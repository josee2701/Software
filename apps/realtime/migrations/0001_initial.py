# Generated by Django 4.0.7 on 2024-06-24 09:31

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('whitelabel', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brands_assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Brands asset',
                'verbose_name_plural': 'Brands assets',
            },
        ),
        migrations.CreateModel(
            name='Commands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=1000, null=True, verbose_name='command')),
                ('name', models.CharField(max_length=1000, null=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='DataPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('visible', models.BooleanField(default=True, verbose_name='visible')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('coin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.coin', verbose_name='coin')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_dataplan', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_dataplan', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('imei', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(15)], verbose_name='imei')),
                ('serial_number', models.CharField(max_length=30, unique=True, verbose_name='serial number')),
                ('firmware', models.CharField(max_length=30, verbose_name='firmware')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('create_date', models.DateField(auto_now_add=True, null=True, verbose_name='create date')),
                ('visible', models.BooleanField(default=True, verbose_name='visible')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_device', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='Geozones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('type_event', models.CharField(choices=[('Entry', 'Entry'), ('Exit', 'Exit'), ('Entry and Exit', 'Entry and Exit')], default='Entry', max_length=20, verbose_name='fuel type')),
                ('radius', models.IntegerField(blank=True, null=True, verbose_name='radius')),
                ('speed', models.IntegerField(blank=True, null=True, verbose_name='speed')),
                ('latitude', models.FloatField(null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(null=True, verbose_name='longitude')),
                ('polygon', models.TextField(blank=True, null=True, verbose_name='geographical polygon')),
                ('color', colorfield.fields.ColorField(blank=True, default='#FF0000', image_field=None, max_length=18, null=True, samples=None, verbose_name='color de geozona')),
                ('color_edges', colorfield.fields.ColorField(blank=True, default='#FF0000', image_field=None, max_length=18, null=True, samples=None, verbose_name='color de borde')),
                ('alarma', models.BooleanField(blank=True, default=False, verbose_name='alarma')),
                ('notification_by_mail', models.BooleanField(blank=True, default=False, verbose_name='notification by mail')),
                ('shape_type', models.IntegerField(blank=True, null=True, verbose_name='shape type')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_geozone', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_geozone', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Last_Avl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=20, verbose_name='imei')),
                ('manufacturer', models.CharField(max_length=20, verbose_name='manufacturer')),
                ('uec_model', models.CharField(max_length=20, verbose_name='model')),
                ('license', models.CharField(max_length=20, verbose_name='license')),
                ('conn_type', models.CharField(max_length=20, verbose_name='conn_type')),
                ('ip', models.CharField(max_length=20, verbose_name='ip')),
                ('port', models.IntegerField(null=True, verbose_name='port')),
                ('socket', models.IntegerField(verbose_name='socket')),
                ('company', models.IntegerField(verbose_name='company')),
                ('main_event', models.IntegerField(verbose_name='main_event')),
                ('event_name', models.CharField(max_length=200, verbose_name='event_name')),
                ('server_date', models.DateTimeField(null=True, verbose_name='server_date')),
                ('signal_date', models.DateTimeField(null=True, verbose_name='signal_date')),
                ('latitude', models.FloatField(verbose_name='latitude')),
                ('longitude', models.FloatField(verbose_name='longitude')),
                ('altitude', models.FloatField(verbose_name='altitude')),
                ('speed', models.FloatField(verbose_name='speed')),
                ('angle', models.FloatField(verbose_name='angle')),
                ('odometer', models.FloatField(verbose_name='odometer')),
                ('satellites', models.IntegerField(verbose_name='satellites')),
                ('central_alarm', models.BooleanField(default=False, verbose_name='central_alarm')),
                ('user_alarm', models.BooleanField(default=False, verbose_name='user_alarm')),
                ('geofence', models.CharField(max_length=200, verbose_name='geofence')),
                ('nearly', models.CharField(max_length=200, verbose_name='nearly')),
                ('status_events', models.CharField(max_length=2000, verbose_name='status_events')),
                ('info_events', models.CharField(max_length=2000, null=True, verbose_name='info')),
                ('unrecognized_events', models.CharField(max_length=2000, verbose_name='unrecognized_events')),
            ],
            options={
                'db_table': 'realtime_last_avl',
            },
        ),
        migrations.CreateModel(
            name='Line_assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.CharField(max_length=100, verbose_name='Line')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='last updated')),
                ('brand_asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.brands_assets', verbose_name='brands assets')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Manufacture')),
            ],
        ),
        migrations.CreateModel(
            name='MobileOperator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='ModelUEC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='model')),
                ('family_uec', models.CharField(max_length=20, verbose_name='family_uec')),
                ('network_type', models.CharField(max_length=10, verbose_name='network type')),
            ],
        ),
        migrations.CreateModel(
            name='Types_assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=200, null=True, verbose_name='asset_name')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name_plural': 'Types assets',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license', models.CharField(default='', max_length=10, verbose_name='license ')),
                ('chassis', models.CharField(blank=True, max_length=25, verbose_name='chassis')),
                ('cylinder_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='cylinder capacity')),
                ('km_per_gallon', models.PositiveIntegerField(blank=True, null=True, verbose_name='km per gallon')),
                ('vehicle_type', models.CharField(max_length=25, verbose_name='vehicle type')),
                ('model', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='model')),
                ('brand', models.CharField(blank=True, max_length=25, verbose_name='brand')),
                ('engine_serial', models.CharField(blank=True, max_length=25, verbose_name='engine serial')),
                ('fuel_type', models.CharField(choices=[('Gasoline', 'Gasoline'), ('Diesel', 'Diesel'), ('Gas', 'Gas'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid')], max_length=20, verbose_name='fuel type')),
                ('max_speed_allowed', models.PositiveIntegerField(blank=True, null=True, verbose_name='max speed allowed')),
                ('insurance', models.CharField(blank=True, max_length=25, null=True, verbose_name='insurance')),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='owner')),
                ('fuel_tank_capacity', models.IntegerField(blank=True, null=True, verbose_name='fuel tank capacity')),
                ('icon', models.ImageField(blank=True, default='https://sadevnp.blob.core.windows.net/media/Iconos_vehicles/coche%20(1).png', null=True, upload_to='Iconos_vehicles/', verbose_name='icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('color', models.CharField(blank=True, max_length=10, verbose_name='color')),
                ('line', models.CharField(blank=True, max_length=50, verbose_name='line')),
                ('camera', models.BooleanField(default=False, verbose_name='camera')),
                ('asset_type', models.BooleanField(default=True, verbose_name='asset type')),
                ('microphone', models.BooleanField(default=False, verbose_name='microphone')),
                ('remote_shutdown', models.BooleanField(default=False, verbose_name='remote shutdown')),
                ('installation_date', models.DateField(verbose_name='Installation date')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacity')),
                ('n_interno', models.CharField(max_length=20, null=True, verbose_name='N° internal')),
                ('alias', models.CharField(blank=True, max_length=10, verbose_name='Alias')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_vehicle', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.device', verbose_name='device')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_vehicle', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_vehiclegroup', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_vehiclegroup', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
                ('vehicles', models.ManyToManyField(to='realtime.vehicle', verbose_name='vehicles')),
            ],
        ),
        migrations.CreateModel(
            name='Vehcile_geozone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='contact name')),
                ('geozones', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.geozones', verbose_name='geozones')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.vehicle', verbose_name='vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Type_brand_line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='last updated')),
                ('brand_asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.brands_assets', verbose_name='brands assets')),
                ('line_asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.line_assets', verbose_name='line assets')),
                ('type_asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.types_assets', verbose_name='types assets')),
            ],
        ),
        migrations.CreateModel(
            name='SimCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=20, null=True, verbose_name='ICCID or serial number')),
                ('phone_number', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='phone number')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('activate_date', models.DateField(verbose_name='activate date')),
                ('iz_az_simcard', models.BooleanField(default=False, verbose_name='AZ simcard')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('visible', models.BooleanField(default=True, verbose_name='visible')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_simcard', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('data_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.dataplan', verbose_name='data plan')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_simcard', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
            options={
                'ordering': ['activate_date'],
            },
        ),
        migrations.CreateModel(
            name='Sending_Commands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='status')),
                ('shipping_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='shipping date')),
                ('answer_date', models.DateTimeField(blank=True, null=True, verbose_name='answer date')),
                ('command', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.commands', verbose_name='command')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_commands', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.device', verbose_name='device')),
            ],
        ),
        migrations.CreateModel(
            name='Report_geozone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_entry', models.DateTimeField(auto_now=True, verbose_name='time entry')),
                ('time_exit', models.DateTimeField(auto_now=True, verbose_name='time exit')),
                ('geozone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.geozones', verbose_name='geozone')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.vehicle', verbose_name='vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Io_items_report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_reports', models.CharField(max_length=2000, null=True, verbose_name='info_reports')),
                ('info_widgets', models.CharField(max_length=2000, null=True, verbose_name='info_widgets')),
                ('info_io', models.CharField(max_length=2000, null=True, verbose_name='info_io')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyModelUEC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacture', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.manufacture', verbose_name='manufacture')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.modeluec', verbose_name='model')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='familymodel',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='realtime.familymodeluec', verbose_name='familymodel'),
        ),
        migrations.AddField(
            model_name='device',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_device', to=settings.AUTH_USER_MODEL, verbose_name='modified by'),
        ),
        migrations.AddField(
            model_name='device',
            name='simcard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.simcard', verbose_name='simcard'),
        ),
        migrations.AddField(
            model_name='dataplan',
            name='operator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.mobileoperator', verbose_name='operator'),
        ),
        migrations.AddField(
            model_name='commands',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.familymodeluec', verbose_name='model'),
        ),
        migrations.CreateModel(
            name='Command_response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(blank=True, max_length=1000, null=True, verbose_name='response')),
                ('answer_date', models.DateTimeField(blank=True, null=True, verbose_name='answer date')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='whitelabel.company', verbose_name='company')),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.device', verbose_name='device')),
            ],
        ),
        migrations.AddField(
            model_name='brands_assets',
            name='type_asset',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.types_assets', verbose_name='Types assets'),
        ),
        migrations.CreateModel(
            name='AVLData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_event', models.IntegerField(verbose_name='main event')),
                ('server_date', models.DateTimeField(null=True, verbose_name='server date')),
                ('signal_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='signal date')),
                ('odometer', models.FloatField(null=True, verbose_name='odometer')),
                ('latitude', models.FloatField(verbose_name='latitude')),
                ('longitude', models.FloatField(verbose_name='longitude')),
                ('calculated_speed', models.PositiveSmallIntegerField(verbose_name='calculated speed')),
                ('angle', models.PositiveSmallIntegerField(null=True, verbose_name='angle')),
                ('data_stream', models.CharField(max_length=4000, null=True, verbose_name='data stream')),
                ('info', models.CharField(max_length=2000, null=True, verbose_name='info')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realtime.device', verbose_name='device')),
            ],
            options={
                'db_table': 'realtime_avl_data',
            },
        ),
    ]
